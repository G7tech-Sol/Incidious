{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing-module.ts","webpack:///./src/app/components/blog/blog.component.css","webpack:///./src/app/components/blog/blog.component.html","webpack:///./src/app/components/blog/blog.component.ts","webpack:///./src/app/components/blog/editblog/editblog.component.css","webpack:///./src/app/components/blog/editblog/editblog.component.html","webpack:///./src/app/components/blog/editblog/editblog.component.ts","webpack:///./src/app/components/contact/contact.component.css","webpack:///./src/app/components/contact/contact.component.html","webpack:///./src/app/components/contact/contact.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/signin/signin.component.css","webpack:///./src/app/components/signin/signin.component.html","webpack:///./src/app/components/signin/signin.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/notauth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/blog.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<div class =\\\"container\\\">\\n  <flash-messages></flash-messages>\\n<router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'App Works';\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularRoutingmodule} from './app.routing-module';\nimport{ FormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AuthService } from './services/auth.service';\nimport { BlogService } from './services/blog.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages/module';\nimport { AuthGuard } from './guards/auth.guard';\nimport { NotAuthGuard } from './guards/notauth.guard';\nimport { EditblogComponent } from './components/blog/editblog/editblog.component'\n// import 'rxjs';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    SignupComponent,\n    SigninComponent,\n    BlogComponent,\n    ContactComponent,\n    EditblogComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AngularRoutingmodule,\n    ReactiveFormsModule,\n    HttpModule,\nFlashMessagesModule.forRoot()\n\n  ],\n  providers: [AuthService,AuthGuard, NotAuthGuard,BlogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { BlogComponent } from './components/blog/blog.component';\r\nimport { EditblogComponent } from './components/blog/editblog/editblog.component';\r\nimport { ContactComponent } from './components/contact/contact.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { SigninComponent } from './components/signin/signin.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notauth.guard'\r\n\r\nconst appRoutes :Routes = [\r\n   { path:'', component: HomeComponent } ,\r\n   { path:'dashboard', component: DashboardComponent, canActivate : [AuthGuard]},\r\n   { path:'profile', component: ProfileComponent ,  canActivate : [AuthGuard]},\r\n   { path:'blog', component: BlogComponent, canActivate : [AuthGuard] },\r\n   { path:'editblog/:id', component: EditblogComponent , canActivate: [AuthGuard] },\r\n   { path:'contact', component: ContactComponent },\r\n   { path:'signup', component: SignupComponent, canActivate :[NotAuthGuard] },\r\n   { path:'signin', component: SigninComponent,canActivate:[NotAuthGuard] }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forRoot(\r\n       appRoutes,\r\n      { enableTracing: true } // <-- debugging purposes only\r\n    )\r\n  ],\r\n  providers: [],\r\n  bootstrap: [],\r\n  exports:[RouterModule]\r\n})\r\nexport class AngularRoutingmodule {}\r\n","module.exports = \"/* Dropdown Button */\\r\\n.dropbtn {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    padding: 16px;\\r\\n    font-size: 16px;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n/* The container <div> - needed to position the dropdown content */\\r\\n.dropdown {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n}\\r\\n/* Dropdown Content (Hidden by Default) */\\r\\n.dropdown-content {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    background-color: #f9f9f9;\\r\\n    min-width: 160px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\r\\n    z-index: 1;\\r\\n}\\r\\n/* Links inside the dropdown */\\r\\n.dropdown-content a {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n}\\r\\n/* Change color of dropdown links on hover */\\r\\n.dropdown-content a:hover {background-color: #f1f1f1}\\r\\n/* Show the dropdown menu on hover */\\r\\n.dropdown:hover .dropdown-content {\\r\\n    display: block;\\r\\n}\\r\\n/* Change the background color of the dropdown button when the dropdown content is shown */\\r\\n.dropdown:hover .dropbtn {\\r\\n    background-color: #3e8e41;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ibG9nL2Jsb2cuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUI7QUFDckI7SUFDSSwwQkFBMEI7SUFDMUIsYUFBYTtJQUNiLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGdCQUFnQjtDQUNuQjtBQUVELG1FQUFtRTtBQUNuRTtJQUNJLG1CQUFtQjtJQUNuQixzQkFBc0I7Q0FDekI7QUFFRCwwQ0FBMEM7QUFDMUM7SUFDSSxjQUFjO0lBQ2QsbUJBQW1CO0lBQ25CLDBCQUEwQjtJQUMxQixpQkFBaUI7SUFDakIsNkNBQTZDO0lBQzdDLFdBQVc7Q0FDZDtBQUVELCtCQUErQjtBQUMvQjtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGVBQWU7Q0FDbEI7QUFFRCw2Q0FBNkM7QUFDN0MsMkJBQTJCLHlCQUF5QixDQUFDO0FBRXJELHFDQUFxQztBQUNyQztJQUNJLGVBQWU7Q0FDbEI7QUFFRCwyRkFBMkY7QUFDM0Y7SUFDSSwwQkFBMEI7Q0FDN0IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Jsb2cvYmxvZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogRHJvcGRvd24gQnV0dG9uICovXHJcbi5kcm9wYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4vKiBUaGUgY29udGFpbmVyIDxkaXY+IC0gbmVlZGVkIHRvIHBvc2l0aW9uIHRoZSBkcm9wZG93biBjb250ZW50ICovXHJcbi5kcm9wZG93biB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi8qIERyb3Bkb3duIENvbnRlbnQgKEhpZGRlbiBieSBEZWZhdWx0KSAqL1xyXG4uZHJvcGRvd24tY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuICAgIG1pbi13aWR0aDogMTYwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwcHggOHB4IDE2cHggMHB4IHJnYmEoMCwwLDAsMC4yKTtcclxuICAgIHotaW5kZXg6IDE7XHJcbn1cclxuXHJcbi8qIExpbmtzIGluc2lkZSB0aGUgZHJvcGRvd24gKi9cclxuLmRyb3Bkb3duLWNvbnRlbnQgYSB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBwYWRkaW5nOiAxMnB4IDE2cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLyogQ2hhbmdlIGNvbG9yIG9mIGRyb3Bkb3duIGxpbmtzIG9uIGhvdmVyICovXHJcbi5kcm9wZG93bi1jb250ZW50IGE6aG92ZXIge2JhY2tncm91bmQtY29sb3I6ICNmMWYxZjF9XHJcblxyXG4vKiBTaG93IHRoZSBkcm9wZG93biBtZW51IG9uIGhvdmVyICovXHJcbi5kcm9wZG93bjpob3ZlciAuZHJvcGRvd24tY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLyogQ2hhbmdlIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIG9mIHRoZSBkcm9wZG93biBidXR0b24gd2hlbiB0aGUgZHJvcGRvd24gY29udGVudCBpcyBzaG93biAqL1xyXG4uZHJvcGRvd246aG92ZXIgLmRyb3BidG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNlOGU0MTtcclxufVxyXG4iXX0= */\"","module.exports = \"<h1 class=\\\"page-header\\\">Blog Feed</h1>\\n\\n<!-- Custom Success/Error Message -->\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message && newPost\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{ message }}\\n  </div>\\n</div>\\n\\n<!-- New Post Button -->\\n<button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-warning\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"newBlogForm()\\\">New Post</button>\\n\\n<!-- Reload Button -->\\n<button [disabled]=\\\"loadingBlogs\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"reloadBlogs()\\\"><span class=\\\"glyphicon glyphicon-repeat\\\"></span>&nbsp;&nbsp;Reload</button>\\n\\n<br />\\n<br />\\n\\n<!-- New Blog Form -->\\n<form [formGroup]=\\\"form\\\" name=\\\"blogForm\\\" (submit)=\\\"onBlogSubmit()\\\" *ngIf=\\\"newPost\\\">\\n  <!-- Title Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"title\\\">Title</label>\\n    <div [ngClass]=\\\"{'has-success': form.controls.title.valid, 'has-error': form.controls.title.dirty && form.controls.title.errors}\\\">\\n      <input type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"*Blog Title\\\" autocomplete=\\\"off\\\" formControlName=\\\"title\\\" />\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.required\\\">This field is required.</li>\\n        <li *ngIf=\\\"(form.controls.title.dirty && form.controls.title.errors?.minlength) || (form.controls.title.dirty && form.controls.title.errors?.maxlength)\\\">Max length: 50, Min length: 5</li>\\n        <li *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.alphaNumericValidation\\\">Must be a letter or number</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Body Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"body\\\">Body</label>\\n    <div [ngClass]=\\\"{'has-success': form.controls.body.valid, 'has-error': form.controls.body.dirty && form.controls.body.errors}\\\">\\n      <textarea name=\\\"body\\\" rows=\\\"8\\\" cols=\\\"80\\\" placeholder=\\\"*Body\\\" class=\\\"form-control\\\" formControlName=\\\"body\\\"></textarea>\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.body.dirty && form.controls.body.errors?.required\\\">This field is required.</li>\\n        <li *ngIf=\\\"(form.controls.body.dirty && form.controls.body.errors?.minlength) || (form.controls.body.dirty && form.controls.body.errors?.maxlength)\\\">Max length: 500, Min length: 5</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Go Back Button -->\\n  <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"btn btn-warning\\\">Go Back</button>\\n  <!-- Submit Button -->\\n  <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\n</form>\\n<!-- New Blog Form -->\\n\\n<!-- Panel Start -->\\n<div *ngIf=\\\"!newPost\\\">\\n  <!-- Panel Outer Layer -->\\n  <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let blog of blogPost\\\">\\n\\n    <!-- Panel Title -->\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">{{blog.title}}</h3>\\n    </div>\\n\\n    <!-- Panel Body -->\\n    <div class=\\\"panel-body\\\">\\n      {{blog.body}}\\n      </div>\\n\\n    <!-- Panel Footer Start -->\\n    <div class=\\\"panel-footer\\\">\\n      <strong>Posted by: </strong>{{blog.createdBy}}\\n      <br />\\n      <strong>Date: </strong>{{blog.createdAt|date:\\\"MMM dd,yyyy\\\"}}\\n      <br />\\n      <div>\\n        <strong>Likes: </strong>{{blog.likes}}\\n        <br />\\n        <strong>Dislikes: </strong>{{blog.dislikes}}\\n      </div>\\n\\n      <!-- Edit Button -->\\n      <a [routerLink]=\\\"['/editblog/', blog._id]\\\" *ngIf=\\\"username === blog.createdBy\\\"><button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\">Edit</button></a>\\n        <!-- Delete Button -->\\n        <a [routerLink]=\\\"['/delete-blog/', blog._id]\\\" *ngIf=\\\"username === blog.createdBy\\\"><button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Delete</button></a>\\n\\n      <!-- Likes Dropdown  -->\\n      <div class=\\\"dropdown\\\">\\n        <!-- Like Button -->\\n        <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"username !== blog.createdBy\\\"><span class=\\\"glyphicon glyphicon-thumbs-up\\\">&nbsp;</span>Likes: 21</button>\\n         <!-- Dropdown Menu Items -->\\n        <div class=\\\"dropdown-content\\\">\\n          <a href=\\\"#\\\">gugui3z24</a>\\n          <a href=\\\"#\\\">jinder</a>\\n          <a href=\\\"#\\\">patel</a>\\n        </div>\\n      </div>\\n\\n      <!-- Dislikes Dropdown  -->\\n      <div class=\\\"dropdown\\\">\\n        <!-- Dislike Button -->\\n        <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-warning\\\" *ngIf=\\\"username !== blog.createdBy\\\"><span class=\\\"glyphicon glyphicon-thumbs-down\\\">&nbsp;</span>Dislikes: 15</button>\\n           <!-- Dropdown Menu Items -->\\n        <div class=\\\"dropdown-content\\\">\\n          <a href=\\\"#\\\">gugui3z24</a>\\n          <a href=\\\"#\\\">jinder</a>\\n          <a href=\\\"#\\\">patel</a>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n    <!-- Panel Footer End -->\\n\\n    <!-- Post Comment Box: Start -->\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\">\\n        <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"draftComment()\\\">Post Comment</button>\\n        <br />\\n        <!-- <form>\\n          <textarea name=\\\"comment\\\" rows=\\\"10\\\" cols=\\\"30\\\" class=\\\"form-control\\\"></textarea>\\n          <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\">Submit Post</button>\\n          <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Cancel</button>\\n        </form> -->\\n      </li>\\n    </ul>\\n    <!-- Post Comment Box: End -->\\n\\n  </div>\\n  <!-- Panel Outer Layer -->\\n</div>\\n<!-- Panel End -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { BlogService } from '../../services/blog.service';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n  message;\n  messageClass;\n  newPost = false;\n  processing = false ;\n  loadingBlogs ;\n  form ;\n  username;\n  blogPost;\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private blogService: BlogService,\n  ) {\nthis.createNewBlogForm();\n  }\n\n  createNewBlogForm(){\n    this.form = this.formBuilder.group({\n      title: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(50),\n        Validators.minLength(5),\n        this.alphaNumericValidation\n      ])],\n      body: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(500),\n        Validators.minLength(5)\n      ])]\n    });\n  }\n  disableFormNewBlogForm(){\n    this.form.get('title').disable();\n    this.form.get('body').disable();\n  }\n  enableFormNewBlogForm(){\n    this.form.get('title').enable();\n    this.form.get('body').enable();\n  }\n  alphaNumericValidation(controls){\n    const regExp = new RegExp(/^[a-zA-Z0-9 ]+$/); // Regular expression to perform test\n    // Check if test returns false or true\n    if (regExp.test(controls.value)) {\n      return null; // Return valid\n    } else {\n      return { 'alphaNumericValidation': true } // Return error in validation\n    }\n  }\n  newBlogForm(){\n    this.newPost = true ;\n  }\n  reloadBlogs(){\n    this.loadingBlogs = true; // Used to lock button\n    this.getAllBlogs();\n  // Get All Blogs\n  setTimeout(() => {\n    this.loadingBlogs = false; // Release button lock after four seconds\n  }, 4000);\n  };\n  draftComment(){\n\n  };\n  onBlogSubmit(){\n    this.processing = true ;\n    this.disableFormNewBlogForm();\n    const blog = {\n      title: this.form.get('title').value,\n      body: this.form.get('body').value,\n      createdBy:this.username\n    }\n\n    this.blogService.newBlog(blog).subscribe(data =>{\n      if (!data.success){\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        this.processing = false;\n        this.enableFormNewBlogForm();\n      } else {\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        setTimeout(()=>{\n          this.newPost = false;\n          this.processing = false;\n          this.message = false;\n          this.form.reset();\n          this.enableFormNewBlogForm();\n        },2000);\n        this.getAllBlogs();\n      }\n    });\n  }\n  goBack(){\n    window.location.reload();\n  }\n  getAllBlogs(){\n    this.blogService.getAllBlogs().subscribe(data=>{\n      this.blogPost = data.blog;\n    })\n  }\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.username = profile.user.username;\n      this.getAllBlogs();\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYmxvZy9lZGl0YmxvZy9lZGl0YmxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 class=\\\"page-header\\\" >\\n\\n  Edit Blog\\n</h1>\\n\\n<!-- Custom Success/Erro Message -->\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{ message }}\\n  </div>\\n</div>\\n\\n<!-- Edit Blog Form -->\\n<form (submit)=\\\"updateBlogSubmit()\\\" *ngIf='!loading'>\\n  <!-- Title Field -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"title\\\">Title</label>\\n    <!-- Title Input -->\\n    <input [disabled]=\\\"processing\\\" type=\\\"text\\\" name=\\\"title\\\" placeholder=\\\"*Blog Title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"blog.title\\\"/>\\n  </div>\\n\\n  <!-- Body Field -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"body\\\">Body</label>\\n    <!-- Body Input -->\\n    <textarea [disabled]=\\\"processing\\\" name=\\\"body\\\" rows=\\\"8\\\" cols=\\\"80\\\"  [(ngModel)]=\\\"blog.body\\\" class=\\\"form-control\\\" placeholder=\\\"*Blog Body\\\"></textarea>\\n  </div>\\n\\n  <!-- Delete Button -->\\n  <a ><button  [disabled]=\\\"processing\\\"  type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button></a>\\n  <!-- Go Back Button -->\\n  <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n  <!-- Save Changes Button -->\\n  <button [disabled]=\\\"processing\\\" type=\\\"submit\\\" name=\\\"save\\\" class=\\\"btn btn-info\\\">Save Changes</button>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { BlogService } from '../../../services/blog.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-editblog',\n  templateUrl: './editblog.component.html',\n  styleUrls: ['./editblog.component.css']\n})\nexport class EditblogComponent implements OnInit {\n message;\n messageClass;\n blog;\n processing = false;\n currentUrl;\n loading = true;\n  constructor(\n    private location: Location,\n    private blogService: BlogService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n  updateBlogSubmit() {\n     this.processing = true; // Lock form fields\n     // Function to send blog object to backend\n     console.log(this.blog);\n     // const blogz= {\n     //   _id: this.blog._id,\n     //   title: this.blog.title,\n     //   body: this.blog.body\n     // }\n     this.blogService.editBlog(this.blog).subscribe(data => {\n       // Check if PUT request was a success or not\n         if (!data.success) {\n         this.messageClass = 'alert alert-danger'; // Set error bootstrap class\n         this.message = data.message; // Set error message\n         this.processing = false; // Unlock form fields\n       } else {\n         this.messageClass = 'alert alert-success'; // Set success bootstrap class\n         this.message = data.message; // Set success message\n         // After two seconds, navigate back to blog page\n         setTimeout(() => {\n           this.router.navigate(['/blog']); // Navigate back to route page\n         }, 2000);\n       }\n     });\n   }\n  goBack() {\n   this.location.back();\n }\n  ngOnInit() {\n     this.currentUrl = this.activatedRoute.snapshot.params;\n     console.log(this.currentUrl);\n    // this.currentUrl= '5c7bc389e5b332193cf24bee';\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe(data =>{\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\n        this.message = 'Blog not found.'; // Set error message\n      } else {\n        this.blog = data.blog; // Save blog object for use in HTML\n        this.loading = false; // Allow loading of blog form\n      }\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29udGFjdC9jb250YWN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  contact works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>MEAN Stack Application</h1>\\n  <p class=\\\"lead\\\">Welcome to the MEAN Stack Application by <strong>Muhammad Numan Tariq</strong></p>\\n  <div>\\n    <a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/signup\\\" class=\\\"btn btn-primary\\\">SignUp</a>\\n    <a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/signin\\\" class=\\\"btn btn-default\\\">SignIn</a>\\n    <a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/blog\\\" class=\\\"btn btn-success\\\">View Blogs</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=\\\"thumbnail\\\">\\n      <img src=\\\"https://image.flaticon.com/icons/svg/417/417745.svg\\\" alt=\\\"placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n      <div class=\\\"caption\\\">\\n        <h3>MongoDB</h3>\\n        <p>MongoDB is a free and open-source cross-platform document-oriented database program. This NoSQL database program uses JSON-like documents with schemas.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417746.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n      <div class=caption>\\n        <h3>ExpressJS</h3>\\n        <p>Express.js is a Node.js framework. Node.js is a platform that allows JavaScript to be used outside the Web Browsers, for creating web and network applications.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417751.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n      <div class=caption>\\n        <h3>Angular 2+</h3>\\n        <p>Angular is a development platform for building mobile and desktop web applications. Ut dignissim eleifend maximus. Ut dignissim eleifend maximus. Ut dignissim eleifend.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417754.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n      <div class=caption>\\n        <h3>NodeJS</h3>\\n        <p>Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417768.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n      <div class=caption>\\n        <h3>Lorem Ipsum</h3>\\n        <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\n    <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417764.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n      <div class=caption>\\n        <h3>Lorem Ipsum</h3>\\n        <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n<div class = \\\"container\\\">\\n  <a class=\\\"navbar-Brand\\\" routerLink=\\\"/home\\\">BOOTSTRAP THEME</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav navbar-left\\\">\\n      <li class=\\\"nav-item \\\">\\n        <a class=\\\"nav-link\\\"  routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink=''>Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav ml-auto navbar-right\\\">\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\">\\n              <a class=\\\"nav-link\\\"  routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink='/dashboard'>Dashboard <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\">\\n              <a class=\\\"nav-link\\\"  routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink='/profile'>Profile <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\">\\n              <a class=\\\"nav-link\\\"  routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink='/blog'>Blog <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\"  routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink='/contact'>Contact <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\">\\n              <a class=\\\"nav-link\\\"  routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink='/signin'>Sign In <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\">\\n              <a class=\\\"nav-link\\\"  routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink='/signup'>Sign UP <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\">\\n              <a class=\\\"nav-link\\\"  (click)= \\\"onLogOut()\\\">Log Out <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n        </ul>\\n  </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService : AuthService ,\n    private router : Router,\n    private flashMessagesService : FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n  onLogOut(){\n    this.authService.logOut();\n    this.flashMessagesService.show('You are Successfully logged out',{cssClass: 'alert-info'});\n    this.router.navigate(['/home']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2 class=\\\"page-header\\\">Profile Page</h2>\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\">Username: {{ username }}</li>\\n  <li class=\\\"list-group-item\\\">Email: {{ email }}</li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n   username;\n   email\n  constructor(\n        private authService : AuthService,\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile =>{\n      this.username = profile.user.username;\n      this.email = profile.user.email;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbmluL3NpZ25pbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n\\n<!-- Custom Success/Error Message -->\\n<div class=\\\"row show-hide-message\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{ message }}\\n  </div>\\n</div>\\n\\n<!-- Login Form -->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\n\\n  <!-- Username Field -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <div [ngClass]=\\\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\\\">\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required.</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Password Field  -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\n      <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\n      </ul>\\n    </div>\\n  </div>\\n  <!-- Submit Button -->\\n  <input [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\" />\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { AuthGuard } from '../../guards/auth.guard';\n\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  messageClass;\n  message;\n  processing = false;\n  form: FormGroup;\n  previousUrl;\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private router: Router,\n    private authService : AuthService,\n    private authguard : AuthGuard,\n  ) { this.createForm(); }\n\n\n\n  createForm() {\n   this.form = this.formBuilder.group({\n     username: ['', Validators.required], // Username field\n     password: ['', Validators.required] // Password field\n   });\n }\n\n enableForm() {\n    this.form.controls['username'].enable(); // Enable username field\n    this.form.controls['password'].enable(); // Enable password field\n  }\n\n  disableForm() {\n   this.form.controls['username'].disable(); // Disable username field\n   this.form.controls['password'].disable(); // Disable password field\n }\n onLoginSubmit() {\n    this.processing = true; // Used to submit button while is being processed\n    this.disableForm(); // Disable form while being process\n    // Create user object from user's input\n    const user = {\n      username: this.form.get('username').value, // Username input field\n      password: this.form.get('password').value // Password input field\n    }\n    this.authService.loginUser(user).subscribe(data=>{\n      if(!data.success){\n        this.messageClass = 'alert alert-dismissible alert-danger';\n        this.message = data.message;\n        this.processing = false;\n        this.enableForm();\n      } else {\n        this.messageClass ='alert alert-dismissible alert-success';\n        this.message = data.message;\n        this.authService.storeUserData(data.token, data.user);\n        setTimeout(()=>{\n          if(this.previousUrl){\n            this.router.navigate([this.previousUrl]);\n          } else{\n                this.router.navigate(['/dashboard']);\n          }\n        },2000);\n      }\n    })\n}\nngOnInit() {\n  if(this.authguard.redirectUrl){\n    this.messageClass = 'alert alert-danger';\n    this.message = 'You Must be login to view this page';\n    this.previousUrl = this.authguard.redirectUrl;\n    this.authguard.redirectUrl = undefined;\n  }\n}\n\n}\n","module.exports = \"/* Credit to bootsnipp.com for the css for the color graph */\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDcmVkaXQgdG8gYm9vdHNuaXBwLmNvbSBmb3IgdGhlIGNzcyBmb3IgdGhlIGNvbG9yIGdyYXBoICovXHJcbiJdfQ== */\"","module.exports = \"<!-- <link href=\\\"https://bootswatch.com/4/darkly/bootstrap.css\\\" rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\">\\n<script src=\\\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\\\"></script>\\n<script src=\\\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\\\"></script> -->\\n<!------ Include the above in your HEAD tag ---------->\\n\\n<div class=\\\"container\\\">\\n<div class=\\\"row justify-content-center\\\">\\n                    <div class=\\\"col-md-8\\\">\\n                        <div>\\n                            <h1 class=\\\"page-header\\\" align = \\\"center\\\">Register</h1>\\n                            <div>\\n                              <div class= \\\"row show-hide-message container\\\">\\n                                <div [ngClass] =\\\"messageClass\\\" >\\n                                  {{message}}\\n                                </div>\\n                              </div>\\n                                <form class=\\\"form-horizontal\\\" (submit)=\\\"onRegisterSubmit()\\\" [formGroup]=\\\"form\\\">\\n\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"cols-sm-2 control-label\\\">Your Name</label>\\n                                        <div class=\\\"cols-sm-10\\\">\\n                                            <div class=\\\"input-group\\\" [ngClass] = \\\"{'has-error': (form.controls.name.errors)&&(form.controls.name.dirty),'has-success': !form.controls.name.errors}\\\">\\n\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"Enter your Name\\\" formControlName=\\\"name\\\"/>\\n                                                <ul class=\\\"help-block\\\">\\n                                                  <li *ngIf=\\\"form.controls.name.errors?.required && form.controls.name.dirty\\\">\\n                                                      Name is required\\n                                                  </li>\\n                                                  <li *ngIf=\\\"(form.controls.name.errors?.minlength || form.controls.name.errors?.maxlength) && form.controls.name.dirty\\\">\\n                                                    Minimum length: 3  Maximum length: 20\\n                                                </li>\\n\\n\\n                                              </ul>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"email\\\" class=\\\"cols-sm-2 control-label\\\">Your Email</label>\\n                                        <div class=\\\"cols-sm-10\\\">\\n                                            <div class=\\\"input-group\\\" [ngClass] = \\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty) ,'has-success': !form.controls.email.errors && emailValid}\\\">\\n\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Enter your Email\\\" formControlName=\\\"email\\\" (blur)= \\\"checkEmail()\\\"/>\\n                                                <ul class=\\\"help-block\\\">\\n                                                <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">\\n                                                      Email is required\\n                                                </li>\\n                                                <li *ngIf=\\\"(form.controls.email.errors?.minlength || form.controls.email.errors?.maxlength) && form.controls.email.dirty\\\">\\n                                                  Minimum length: 5  Maximum length: 30\\n                                              </li>\\n                                              <li *ngIf =\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">\\n                                                  Must be a valid email\\n                                              </li>\\n                                              <li *ngIf = \\\"emailMessage\\\">\\n                                                {{emailMessage}}\\n                                              </li>\\n                                              </ul>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"username\\\" class=\\\"cols-sm-2 control-label\\\">Username</label>\\n                                        <div class=\\\"cols-sm-10\\\">\\n                                            <div class=\\\"input-group\\\" [ngClass] = \\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty),'has-success': !form.controls.username.errors && usernameValid}\\\">\\n\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Enter your Username\\\" formControlName=\\\"username\\\" (blur) = \\\"checkUsername()\\\"/>\\n                                                <ul class=\\\"help-block\\\">\\n                                                  <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">\\n                                                      Username is required\\n                                                </li>\\n                                                <li *ngIf=\\\"(form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength) && form.controls.username.dirty\\\">\\n                                                  Minimum length: 5  Maximum length: 10\\n                                              </li>\\n                                              <li *ngIf =\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\\\">\\n                                                  Must be a valid username\\n                                              </li>\\n                                              <li *ngIf = \\\"usernameMessage\\\">\\n                                                  {{usernameMessage}}\\n                                              </li>\\n                                              </ul>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"password\\\" class=\\\"cols-sm-2 control-label\\\">Password</label>\\n                                        <div class=\\\"cols-sm-10\\\">\\n                                            <div class=\\\"input-group\\\" [ngClass] = \\\"{'has-error': (form.controls.password.errors)&&(form.controls.password.dirty),'has-success': !form.controls.password.errors}\\\">\\n\\n                                                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Enter your Password\\\" formControlName=\\\"password\\\" />\\n                                                <ul class=\\\"help-block\\\">\\n                                                  <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">\\n                                                      Password is required\\n                                                </li>\\n                                                <li *ngIf=\\\"(form.controls.password.errors?.minlength || form.controls.password.errors?.maxlength)&&form.controls.password.dirty\\\">\\n                                                  Minimum length: 8  Maximum length: 20\\n                                              </li>\\n                                              <li *ngIf=\\\"form.controls.password.errors?.validatePassword &&form.controls.password.dirty\\\">\\n                                                1 Uppercase 1 Lowercase 1 SpecialCharectors 1 Number\\n                                            </li>\\n                                              </ul>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"confirm\\\" class=\\\"cols-sm-2 control-label\\\">Confirm Password</label>\\n                                        <div class=\\\"cols-sm-10\\\">\\n                                            <div class=\\\"input-group\\\" [ngClass] = \\\"{'has-error': (form.controls.confirm.errors)&&(form.controls.confirm.dirty),'has-success': !form.controls.confirm.errors}\\\">\\n                                              \\n                                                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirm\\\" id=\\\"confirm\\\" placeholder=\\\"Confirm your Password\\\" formControlName=\\\"confirm\\\"/>\\n                                                <ul class=\\\"help-block\\\">\\n                                                  <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">\\n                                                      This Field is required.\\n                                                </li>\\n                                                <li *ngIf = \\\"form.errors?.matchPassword && form.controls.confirm.dirty\\\">\\n                                                  Password do not match.\\n                                                </li>\\n                                              </ul>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <button type=\\\"submit\\\" [disabled] = \\\"!form.valid || processing || !usernameValid || !emailValid\\\"class=\\\"btn btn-primary btn-lg btn-block login-button\\\" >Register</button>\\n                                    </div>\\n                                    <div class=\\\"login-register\\\">\\n                                          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block login-button\\\" routerLink='/signin'>Login</button>\\n                                    </div>\\n                                </form>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n </div>\\n  <!-- <p>Name : {{form.controls.name.value}}</p>\\n        <p>Username : {{form.controls.username.value}}</p>\\n        <p>Email : {{form.controls.email.value}}</p>  -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n form : FormGroup;\n message;\n messageClass;\n processing;\n emailValid;\n emailMessage;\n usernameValid;\n usernameMessage;\n\n\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private authService:AuthService,\n    private router : Router,\n  ) {\n    this.createForm();\n  }\n\n  createForm(){\n    this.form = this.formBuilder.group({\n      name : [\"\",Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(20)\n      ])] ,\n      username : [\"\",Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(10),\n        this.validateUsername\n      ])],\n      email : [\"\",Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(30),\n        this.validateEmail\n      ])],\n      password : [\"\", Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(20),\n        this.validatePassword\n      ])],\n      confirm :[\"\",Validators.compose([\n        Validators.required,\n      ])]\n    }, { validator: this.matchPassword('password','confirm')} )\n  };\n  validateEmail(controls){\n     const regExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n     if(regExp.test(controls.value)){\n       return null;\n     }else{\n       return {\"validateEmail\" : true};\n     }\n  }\n  validateUsername(controls){\n    const regExp = /^[a-zA-Z0-9]+$/;\n     if(regExp.test(controls.value)){\n       return null;\n     }else{\n       return {\"validateUsername\" : true};\n     }\n  }\n  validatePassword(controls){\n    const regExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/ ;\n    if (regExp.test(controls.value)){\n      return null;\n    } else {\n      return {\"validatePassword\" : true};\n    }\n  }\n  matchPassword(password,confirm){\n    return (group: FormGroup) => {\n      if (group.controls[password].value === group.controls[confirm].value){\n        return null;\n      } else {\n      return { 'matchPassword':true};\n      }\n    }\n  }\n\ndisableForm(){\n  this.form.controls['email'].disable;\n  this.form.controls['name'].disable;\n  this.form.controls['username'].disable;\n  this.form.controls['password'].disable;\n  this.form.controls['confirm'].disable;\n};\n\nenableForm(){\n  this.form.controls['email'].enable;\n  this.form.controls['name'].enable;\n  this.form.controls['username'].enable;\n  this.form.controls['password'].enable;\n  this.form.controls['confirm'].enable;\n};\n\n\n\n\n  onRegisterSubmit(){\n    this.processing = true ;\n    this.disableForm();\n    const user = {\n      name : this.form.get('name').value,\n      email : this.form.get('email').value,\n      username : this.form.get('username').value,\n      password : this.form.get('password').value\n    }\n    this.authService.registerUser(user).subscribe(data =>{\n      if(!data.success){\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        this.processing = false ;\n        this.enableForm();\n      } else{\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        setTimeout(()=>{\n          this.router.navigate(['/signin']);\n        },2000);\n\n      }\n    })\n  };\n  checkEmail(){\n    this.authService.checkEmail(this.form.get('email').value).subscribe(data=>{\n      console.log(data);\n      if(!data.success){\n        this.emailValid = false;\n        this.emailMessage = data.message;\n      } else {\n        this.emailValid = true;\n        this.emailMessage = data.message;\n      }\n    }) ;\n  };\n\n\n  checkUsername(){\n    this.authService.checkUsername(this.form.get('username').value).subscribe(data=>{\n      if(!data.success){\n        this.usernameValid = false;\n        this.usernameMessage = data.message;\n      } else {\n        this.usernameValid = true;\n        this.usernameMessage = data.message;\n      }\n    });\n  };\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  redirectUrl;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to check if user is authorized to view route\r\n  canActivate(\r\n    router: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ) {\r\n    // Check if user is logge din\r\n    if (this.authService.loggedIn()) {\r\n      return true; // Return true: User is allowed to view route\r\n    } else {\r\n      this.redirectUrl = state.url; // Grab previous urul\r\n      this.router.navigate(['/signin']); // Return error and route to login page\r\n      return false; // Return false: user not authorized to view page\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to determine whether user is authorized to view route\r\n  canActivate() {\r\n    // Check if user is logged in\r\n    if (this.authService.loggedIn()) {\r\n      this.router.navigate(['/']); // Return error, route to home\r\n      return false; // Return false: user not allowed to view route\r\n    } else {\r\n      return true; // Return true: user is allowed to view route\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n//import { Observable } from 'rxjs/Observable';\n  import { map } from 'rxjs/operators';\n // import { Observable } from \"rxjs/Rx\";\nimport { tokenNotExpired } from 'angular2-jwt';\n\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\ndomain = \"\";\nauthToken;\nuser;\noptions;\n  constructor(\n    private http: Http,\n\n\n\n  ) { }\n\n  createAuthenticationHeaders(){\n    this.loadToken();\n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-type' : 'application/json',\n        'authorization' : this.authToken\n      })\n    });\n  };\n  loadToken(){\n    this.authToken = localStorage.getItem('token');\n  };\n  registerUser(user){\n    return this.http.post(this.domain + \"/authentication/register\", user).pipe(map(res => res.json()));\n  };\n\n  checkUsername(username){\n    return this.http.get(this.domain + \"/authentication/checkUsername/\" + username).pipe( map ((res : any) => res.json()));\n  };\n\n  checkEmail(email){\n\n     // return this.http.get(this.domain + \"/authentication/checkEmail\" + email).pipe(map (res => res.json()));\n     return this.http.get(this.domain + \"/authentication/checkEmail/\" + email).pipe(map ((res : any) => res.json()));\n     console.log(\"email is\", email);\n  };\n\n  loginUser(user){\n    return this.http.post(this.domain + \"/authentication/login\" , user).pipe(map(res => res.json()));\n  };\n  logOut(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n\n  };\n\n  storeUserData(token, user){\n    localStorage.setItem ('token',token);\n    localStorage.setItem('user',JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  };\n  getProfile(){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + \"/authentication/profile\" , this.options).pipe(map(res => res.json()));\n  };\n\n  loggedIn() {\n    return tokenNotExpired();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { AuthService } from './auth.service';\n import { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  options;\n   domain = this.authService.domain;\n\n   constructor(\n     private authService: AuthService,\n     private http: Http\n   ) { }\n\n   // Function to create headers, add token, to be used in HTTP requests\n   createAuthenticationHeaders() {\n     this.authService.loadToken(); // Get token so it can be attached to headers\n     // Headers configuration options\n     this.options = new RequestOptions({\n       headers: new Headers({\n         'Content-Type': 'application/json', // Format set to JSON\n         'authorization': this.authService.authToken // Attach token\n       })\n\n     });\n   }\n\n newBlog(blog){\n   this.createAuthenticationHeaders();\n   return this.http.post(this.domain + '/blogs/newBlog', blog , this.options).pipe(map(res => res.json()));\n }\n getAllBlogs(){\n   this.createAuthenticationHeaders();\n   return this.http.get(this.domain + '/blogs/allBlogs' , this.options).pipe(map(res=>res.json()));\n }\n getSingleBlog(id){\n   this.createAuthenticationHeaders();\n   return this.http.get(this.domain+ '/blogs/singleblog/' + id , this.options).pipe(map(res=>res.json()));\n }\n editBlog(blog) {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.put(this.domain + '/blogs/updateBlog', blog , this.options).pipe(map(res => res.json()));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}